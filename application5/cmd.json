{
    "CmdPrompt":{
        "cmd1":{
            "summary":"テスト用cmd1",
            "syntax":"cmd1[半角スペース]test1,コマンドの例文とかを書くよ"
        },
        "文字コード変更(chcp)":{
            "summary":"cmdプロンプトの文字コードを変更する",
            "syntax":"chcp [文字コード],65001 = UTF-8,932 = shift-jis,20932 = EUC,51932 = euc-jp,20127 = us-ascii,,※文字コードを指定しない場合、現在のcmd上での文字コードが表示される(数字のみ)"
        },
        "空きIPアドレス確認(arp)":{
            "summary":"空きIPアドレスを確認するコマンド",
            "syntax":"arp -a,使用されているプライベートIPと、使用者であるMACアドレスが表示される。,固定IPを取得したい時は、このコマンドを入力し、空きIPアドレスを確認するといい。,但し、ここに表示されるのは、現在電源が入っている端末のみ。,記載されていないからといって固定IPに登録してしまうと、バッティングする可能性がある。,また、DHPCの範囲のIPを使用してしまうと、将来バッティングする可能性があるため、,必ずDHCPの範囲も確認しておく必要がある。"
        },
        "ログオン中ユーザーの権限確認":{
            "summary":"ログオン中ユーザーが所有する権限を確認する",
            "syntax":"whoami /priv"
        },
        "リダイレクト":{
            "summary":"コマンドの実行結果を任意のファイルに書き込む",
            "syntax":"〇上書き,[任意のコマンド] > [書き込み先パス],〇追記,[任意のコマンド] >> [書き込み先パス],※上書き・追記モードいずれも書き込み先が無い場合、勝手に作る"
        },
        "ファイル操作系":{
            "summary":"ファイル操作方法",
            "syntax":"del [option] ファイル名 or フルパス,ファイルを削除する,,xcopy sourcefile targetfile [option],ディレクトリごとファイルをコピーする,/-Yで上書きモード,copy [option] sourcefile targetfile,ファイルをコピーする。,/-Yで上書きモード"
        },
        "ディレクトリ、ファイル閲覧系":{
            "summary":"ディレクトリ、ファイル閲覧系",
            "syntax":"dir,　cd内のファイルとフォルダの一覧を取得する,　,type ファイル名,　ファイルの内容を表示する,more ファイル名,　ファイルの内容を表示する(少しずつ表示するので、長い文章の場合こちらがおすすめ),　,fc option file1 file2,　ファイル1、ファイル2の比較を行う,　オプション内容は以下,　　/A　違いのある部分ごとに先頭行と最終行だけを表示する,　　/B　バイナリモードで比較(拡張子によってはこれがデフォルトとなる),　　/C　大文字小文字区別しない,　　/L　ASCIIテキストとして比較する(デフォルト),　　/LB[num]　連続する最大相違行数を指定(デフォルト:100),　　/N　ASCIIテキストとして比較する際に行番号を表示する,　　/OFF[LINE]　オフライン属性が設定されたファイルを比較対象とする,　　/T　タブをスペースに変換しない,　　/U　Unicodeテキストとしてファイルを比較する,　　/W　連続した空白を1つのスペースとして比較する(行頭・行末の空白文字は無視される),　　/NNNN　不一致発見後に確認する、一致すべき連続行数を指定する(デフォルト : 2),　　　→2未満にすると、一致する行まで相違点として表示される"
        },
        "ファイル中文字列検索":{
            "summary":"指定ファイル内に指定した文字列が存在するか検索する",
            "syntax":"findstr 検索文字列 ファイル名,ファイル名 ... cd内ならファイル名のみ,　　異なるディレクトリならフルパス,　　cd内全て参照なら*"
        },
        "vim":{
            "summary":"少し高機能なテキストエディタ",
            "syntax":"vimの実行方法は、コマンドプロンプトで vim [フルパス] と入力する,※カレントディレクトリ内のファイルなら、フルパスでなくファイル名のみでok,操作する前に、必ずEscキーを押す,vimにはコマンドモード・入力モードがある,●モード切替,i　→　挿入モード,l　→　カーソルが当たっている行の先頭から入力ができる,A　→　カーソルが当たっている行の末尾から入力ができる,o　→　カーソルが当たっている行の下に空白行を挿入し、そこから入力できる,O　→　カーソルが当たっている行の下に空白行を挿入し、そこから入力できる,●よく使う便利機能,u　→　操作を取り消す,dd　→　カーソル位置の行を削除,dw　→　カーソル位置から次の単語の位置まで削除,yy　→　カーソル位置の行をコピー,p　→　カーソル位置の下の行に追加し、ペースト,P(大文字)　→　カーソル位置の上の行に追加し、ペースト,/検索文字　→　カーソル位置から後方に向かって検索を行う,?検索文字　→　カーソル位置から前方に向かって検索を行う,●保存系,:q　→　vimを終了,:q!　→　vimを強制終了,:w →　ファイルを保存,:wq　→　ファイルを保存して終了,●文字コード確認,:set enc?　→　vimの文字コードを確認,:set enc=<文字コード>　→　文字コードを変更する,　例 ... :set enc=utf-8,:set fenc?　→　開いているファイルの文字コードを確認する"
        },
        "tracert":{
            "summary":"tracert経路を調べる)",
            "syntax":"tracert [IPアドレスまたはドメイン名]"
        },
        "taskkill":{
            "summary":"タスクを終了させるコマンド",
            "syntax":"taskkill /f /pid ****,/f →強制終了,/pid →pidを指定,**** →pid,※これで削除できない場合、powershell用コマンドのwmicコマンドを使う"
        },
        "ネットーワーク系":{
            "summary":"ネットワーク系のコマンドが簡単にまとめられている",
            "syntax":"ipconfig,　ネットワーク構成,ping [ホストorIP],　pingを送信する,※ping 8.8.8.8,　dns.googleにpingを送信,tracert [ホストorIP],　宛先([ホストorIP])までの経路をトレースする"
        }
    },
    "PowerShell":{
        "ファイルロック":{
            "summary":"ファイルをロックする方法",
            "syntax":"〇Lock,$file = [System.IO.File]::Open($filePath,[System.IO.FileMode]::Open,[System.IO.FileAccess]::Read,[System.IO.FileShare]::None),〇UnLock,$file.Close(),（没）ロック確認,リソースモニター > 「関連付けられたハンドル」 > ロックされているフォルダ名を入力　欄に該当するファイル名を入れて検索をかける"
        },
        "wmic(プロセス強制終了)":{
            "summary":"指定したプロセスを一気に強制終了する",
            "syntax":"wmic process where \"name='プロセス名'\" delete,'プロセス名' = chromeの場合、chrome.exe。　excelの場合、excel.exe"
        },
        "test-netconnection":{
            "summary":"ポートが開いてるか確認する",
            "syntax":"test-netconnection -Remoteaddress IP -port port"
        }
    }
}