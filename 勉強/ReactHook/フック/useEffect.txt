https://qiita.com/seira/items/e62890f11e91f6b9653f

useEffectを使うと、useEffectに渡された関数はレンダーの結果が反映された後に動作する
⇒関数の実行タイミングを、Reactのレンダリング後まで遅らせるフック

副作用の処理(DOMの書き換え、変数代入、API通信・UI構築以外のその他処理)を関数コンポーネントで扱える

useEffect(() => {
    /* 第1引数。実行させたい副作用関数を記述 */
    console.log('副作用関数が実行された')
},[配列(第2引数)]) //第2引数には、副作用関数の実行タイミングを制御する依存データを記述（省略可能）

※第1引数（副作用関数）の戻り値はクリーンアップ関数 or 何も返さない　が必須条件
　クリーンアップ関数とは、イベントリスナの削除・タイマーのキャンセル等
　これをreturnすると、2度目以降のレンダリング時に、前回の副作用を消す事が可能。

※第2引数を省略すると、コンポーネントがレンダリングされるたびに
　副作用関数が実行される事になる。無限ループの危険性大。
　実際には第2引数を省略するケースは、ほぼ無いとの事。

初回のレンダリング時の後、1回だけ実行させたい場合は、空の配列[]を指定する
これにより、初回レンダリング時のみ副作用関数が実行される。

第2引数には、state変数(状態変数)を渡す事も可能。
これにより、状態変数で変化がある度に関数を実行させることも可能。

　