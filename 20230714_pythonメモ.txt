イテレータ ... 順番が決まっている配列、リストのようなもの　List等が代表
                →辞書型(dict)はイテレータではない(キーで管理しているため)

辞書型...json等

List...配列のようなもの [1(0), 2(1), 3(2), 4(3), 5(4)]
    list_a[インデックス番号]で、指定した要素の取得も可能

for文
    for i in List
        → Listの中身を0番目からiに順番に格納していく
        
        1回目のループ in 1, out (空)
        2回目のループ in 2, out 1
        3回目のループ in 3, out 2   ...

range
    range関数　range(5)の場合、0から4の計5つのイテレータを生成する

    for i in range(5)
        →range(5)により、0～4のイテレータが生成された[0, 1, 2, 3, 4]
        これを変数iにEOFまで格納を繰り返す為、5回のループが実現できる

def
    関数・メソッドの定義づけ。戻り値は指定しても良し、無くても良い


まとめ
    ・多分、jsonのキー自体の取得はfor文を使わなくてもできる
    ・for文等でListの中身を順番に見ていき、合致する値があれば処理を止め、値を取得するなどの方法で、欲しいキー・値が取得可能